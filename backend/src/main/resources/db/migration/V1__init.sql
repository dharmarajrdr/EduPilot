CREATE TABLE account
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at   TIMESTAMP WITHOUT TIME ZONE,
    updated_at   TIMESTAMP WITHOUT TIME ZONE,
    email        VARCHAR(255)                            NOT NULL,
    phone_number VARCHAR(255)                            NOT NULL,
    password     VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_account PRIMARY KEY (id)
);

CREATE TABLE admin
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at  TIMESTAMP WITHOUT TIME ZONE,
    updated_at  TIMESTAMP WITHOUT TIME ZONE,
    user_id     BIGINT,
    added_by_id BIGINT,
    CONSTRAINT pk_admin PRIMARY KEY (id)
);

CREATE TABLE category
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (id)
);

CREATE TABLE certificate
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    learner_id BIGINT,
    course_id  BIGINT,
    CONSTRAINT pk_certificate PRIMARY KEY (id)
);

CREATE TABLE comment
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    user_id    BIGINT,
    message    VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_comment PRIMARY KEY (id)
);

CREATE TABLE course
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at          TIMESTAMP WITHOUT TIME ZONE,
    updated_at          TIMESTAMP WITHOUT TIME ZONE,
    title               VARCHAR(255)                            NOT NULL,
    description         VARCHAR(255),
    instructor_id       BIGINT,
    subscription_type   VARCHAR(255)                            NOT NULL,
    released_date       TIMESTAMP WITHOUT TIME ZONE,
    course_status       VARCHAR(255),
    category_id         BIGINT,
    lecture_access_mode VARCHAR(255)                            NOT NULL,
    price               DOUBLE PRECISION                        NOT NULL,
    percentage          DOUBLE PRECISION                        NOT NULL,
    until_date          TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_course PRIMARY KEY (id)
);

CREATE TABLE course_ratings
(
    course_id  BIGINT NOT NULL,
    ratings_id BIGINT NOT NULL
);

CREATE TABLE course_tag
(
    course_id BIGINT NOT NULL,
    tag_id    BIGINT NOT NULL
);

CREATE TABLE instructor
(
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at          TIMESTAMP WITHOUT TIME ZONE,
    updated_at          TIMESTAMP WITHOUT TIME ZONE,
    user_id             BIGINT,
    current_designation VARCHAR(255),
    bio                 VARCHAR(255),
    verified            BOOLEAN                                 NOT NULL,
    CONSTRAINT pk_instructor PRIMARY KEY (id)
);

CREATE TABLE instructor_learner_follow
(
    instructor_id BIGINT NOT NULL,
    learner_id    BIGINT NOT NULL
);

CREATE TABLE instructor_ratings
(
    instructor_id BIGINT NOT NULL,
    ratings_id    BIGINT NOT NULL
);

CREATE TABLE learner
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    is_free       BOOLEAN,
    deletion_date TIMESTAMP WITHOUT TIME ZONE,
    deleted       BOOLEAN                                 NOT NULL,
    created_at    TIMESTAMP WITHOUT TIME ZONE,
    updated_at    TIMESTAMP WITHOUT TIME ZONE,
    user_id       BIGINT,
    CONSTRAINT pk_learner PRIMARY KEY (id)
);

CREATE TABLE learner_course
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    learner_id BIGINT,
    course_id  BIGINT,
    CONSTRAINT pk_learnercourse PRIMARY KEY (id)
);

CREATE TABLE learner_lecture
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    learner_id BIGINT,
    lecture_id BIGINT,
    CONSTRAINT pk_learnerlecture PRIMARY KEY (id)
);

CREATE TABLE lecture
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    deletion_date TIMESTAMP WITHOUT TIME ZONE,
    deleted       BOOLEAN                                 NOT NULL,
    created_at    TIMESTAMP WITHOUT TIME ZONE,
    updated_at    TIMESTAMP WITHOUT TIME ZONE,
    chapter_id    INTEGER                                 NOT NULL,
    title         VARCHAR(255)                            NOT NULL,
    description   VARCHAR(255)                            NOT NULL,
    video_id      UUID                                    NOT NULL,
    course_id     BIGINT,
    CONSTRAINT pk_lecture PRIMARY KEY (id)
);

CREATE TABLE lecture_attachments
(
    lecture_id BIGINT       NOT NULL,
    file_id    UUID         NOT NULL,
    file_name  VARCHAR(255) NOT NULL,
    file_type  VARCHAR(255)
);

CREATE TABLE lecture_discussion
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    comment_id BIGINT,
    lecture_id BIGINT,
    CONSTRAINT pk_lecturediscussion PRIMARY KEY (id)
);

CREATE TABLE quiz
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    quiz_group_id BIGINT,
    question      VARCHAR(255),
    answer_type   VARCHAR(255),
    CONSTRAINT pk_quiz PRIMARY KEY (id)
);

CREATE TABLE quiz_answers
(
    quiz_id BIGINT NOT NULL,
    content VARCHAR(255)
);

CREATE TABLE quiz_group
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    is_free       BOOLEAN,
    deletion_date TIMESTAMP WITHOUT TIME ZONE,
    deleted       BOOLEAN                                 NOT NULL,
    created_at    TIMESTAMP WITHOUT TIME ZONE,
    updated_at    TIMESTAMP WITHOUT TIME ZONE,
    title         VARCHAR(255),
    course_id     BIGINT,
    CONSTRAINT pk_quizgroup PRIMARY KEY (id)
);

CREATE TABLE quiz_options
(
    quiz_id BIGINT NOT NULL,
    content VARCHAR(255)
);

CREATE TABLE rating
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    score      INTEGER,
    message    VARCHAR(255),
    user_id    BIGINT,
    CONSTRAINT pk_rating PRIMARY KEY (id)
);

CREATE TABLE reply
(
    id                    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at            TIMESTAMP WITHOUT TIME ZONE,
    updated_at            TIMESTAMP WITHOUT TIME ZONE,
    user_id               BIGINT,
    message               VARCHAR(255)                            NOT NULL,
    lecture_discussion_id BIGINT,
    CONSTRAINT pk_reply PRIMARY KEY (id)
);

CREATE TABLE skill
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name          VARCHAR(255)                            NOT NULL,
    instructor_id BIGINT,
    CONSTRAINT pk_skill PRIMARY KEY (id)
);

CREATE TABLE tag
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_tag PRIMARY KEY (id)
);

CREATE TABLE users
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at   TIMESTAMP WITHOUT TIME ZONE,
    updated_at   TIMESTAMP WITHOUT TIME ZONE,
    user_name    VARCHAR(255)                            NOT NULL,
    display_name VARCHAR(255)                            NOT NULL,
    account_id   BIGINT,
    user_type    VARCHAR(255)                            NOT NULL,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

ALTER TABLE account
    ADD CONSTRAINT uc_account_email UNIQUE (email);

ALTER TABLE account
    ADD CONSTRAINT uc_account_phonenumber UNIQUE (phone_number);

ALTER TABLE category
    ADD CONSTRAINT uc_category_name UNIQUE (name);

ALTER TABLE course_ratings
    ADD CONSTRAINT uc_course_ratings_ratings UNIQUE (ratings_id);

ALTER TABLE instructor_ratings
    ADD CONSTRAINT uc_instructor_ratings_ratings UNIQUE (ratings_id);

ALTER TABLE lecture_attachments
    ADD CONSTRAINT uc_lecture_attachments_fileid UNIQUE (file_id);

ALTER TABLE lecture
    ADD CONSTRAINT uc_lecture_videoid UNIQUE (video_id);

ALTER TABLE skill
    ADD CONSTRAINT uc_skill_name UNIQUE (name);

ALTER TABLE tag
    ADD CONSTRAINT uc_tag_name UNIQUE (name);

ALTER TABLE users
    ADD CONSTRAINT uc_users_username UNIQUE (user_name);

ALTER TABLE admin
    ADD CONSTRAINT FK_ADMIN_ON_ADDEDBY FOREIGN KEY (added_by_id) REFERENCES admin (id);

ALTER TABLE admin
    ADD CONSTRAINT FK_ADMIN_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE certificate
    ADD CONSTRAINT FK_CERTIFICATE_ON_COURSE FOREIGN KEY (course_id) REFERENCES course (id);

ALTER TABLE certificate
    ADD CONSTRAINT FK_CERTIFICATE_ON_LEARNER FOREIGN KEY (learner_id) REFERENCES learner (id);

ALTER TABLE comment
    ADD CONSTRAINT FK_COMMENT_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE course
    ADD CONSTRAINT FK_COURSE_ON_CATEGORY FOREIGN KEY (category_id) REFERENCES category (id);

ALTER TABLE course
    ADD CONSTRAINT FK_COURSE_ON_INSTRUCTOR FOREIGN KEY (instructor_id) REFERENCES instructor (id);

ALTER TABLE instructor
    ADD CONSTRAINT FK_INSTRUCTOR_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE learner_course
    ADD CONSTRAINT FK_LEARNERCOURSE_ON_COURSE FOREIGN KEY (course_id) REFERENCES course (id);

ALTER TABLE learner_course
    ADD CONSTRAINT FK_LEARNERCOURSE_ON_LEARNER FOREIGN KEY (learner_id) REFERENCES learner (id);

ALTER TABLE learner_lecture
    ADD CONSTRAINT FK_LEARNERLECTURE_ON_LEARNER FOREIGN KEY (learner_id) REFERENCES learner (id);

ALTER TABLE learner_lecture
    ADD CONSTRAINT FK_LEARNERLECTURE_ON_LECTURE FOREIGN KEY (lecture_id) REFERENCES lecture (id);

ALTER TABLE learner
    ADD CONSTRAINT FK_LEARNER_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE lecture_discussion
    ADD CONSTRAINT FK_LECTUREDISCUSSION_ON_COMMENT FOREIGN KEY (comment_id) REFERENCES comment (id);

ALTER TABLE lecture_discussion
    ADD CONSTRAINT FK_LECTUREDISCUSSION_ON_LECTURE FOREIGN KEY (lecture_id) REFERENCES lecture (id);

ALTER TABLE lecture
    ADD CONSTRAINT FK_LECTURE_ON_COURSE FOREIGN KEY (course_id) REFERENCES course (id);

ALTER TABLE quiz_group
    ADD CONSTRAINT FK_QUIZGROUP_ON_COURSE FOREIGN KEY (course_id) REFERENCES course (id);

ALTER TABLE quiz
    ADD CONSTRAINT FK_QUIZ_ON_QUIZGROUP FOREIGN KEY (quiz_group_id) REFERENCES quiz_group (id);

ALTER TABLE rating
    ADD CONSTRAINT FK_RATING_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE reply
    ADD CONSTRAINT FK_REPLY_ON_LECTUREDISCUSSION FOREIGN KEY (lecture_discussion_id) REFERENCES lecture_discussion (id);

ALTER TABLE reply
    ADD CONSTRAINT FK_REPLY_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE skill
    ADD CONSTRAINT FK_SKILL_ON_INSTRUCTOR FOREIGN KEY (instructor_id) REFERENCES instructor (id);

ALTER TABLE users
    ADD CONSTRAINT FK_USERS_ON_ACCOUNT FOREIGN KEY (account_id) REFERENCES account (id);

ALTER TABLE course_ratings
    ADD CONSTRAINT fk_courat_on_course FOREIGN KEY (course_id) REFERENCES course (id);

ALTER TABLE course_ratings
    ADD CONSTRAINT fk_courat_on_rating FOREIGN KEY (ratings_id) REFERENCES rating (id);

ALTER TABLE course_tag
    ADD CONSTRAINT fk_coutag_on_course FOREIGN KEY (course_id) REFERENCES course (id);

ALTER TABLE course_tag
    ADD CONSTRAINT fk_coutag_on_tag FOREIGN KEY (tag_id) REFERENCES tag (id);

ALTER TABLE instructor_learner_follow
    ADD CONSTRAINT fk_insleafol_on_instructor FOREIGN KEY (instructor_id) REFERENCES instructor (id);

ALTER TABLE instructor_learner_follow
    ADD CONSTRAINT fk_insleafol_on_learner FOREIGN KEY (learner_id) REFERENCES learner (id);

ALTER TABLE instructor_ratings
    ADD CONSTRAINT fk_insrat_on_instructor FOREIGN KEY (instructor_id) REFERENCES instructor (id);

ALTER TABLE instructor_ratings
    ADD CONSTRAINT fk_insrat_on_rating FOREIGN KEY (ratings_id) REFERENCES rating (id);

ALTER TABLE lecture_attachments
    ADD CONSTRAINT fk_lecture_attachments_on_lecture FOREIGN KEY (lecture_id) REFERENCES lecture (id);

ALTER TABLE quiz_answers
    ADD CONSTRAINT fk_quiz_answers_on_quiz FOREIGN KEY (quiz_id) REFERENCES quiz (id);

ALTER TABLE quiz_options
    ADD CONSTRAINT fk_quiz_options_on_quiz FOREIGN KEY (quiz_id) REFERENCES quiz (id);